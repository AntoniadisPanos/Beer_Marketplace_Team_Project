@using Omadiko.Entities;

@{
    ViewBag.Title = "PaymentInfo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>

</head>
<body>
    @if ((Session["Cart"] == null))
    {
        var items = (List<Item>)Session["Cart"];
    }
    <!-- Fake page loading -->
    <div id="fakeLoader"></div>

    <!-- Wrapper -->
    <div class="wrapper">



        <!-- Hero -->
        <div id="hero" class="single-page section" style="background-image: url(http://placehold.it/1500x500)">
            <br />
            <br />
            <!-- Content -->
            <div class="container">
                <div class="row blurb scrollme animateme" data-when="exit" data-from="0" data-to="1" data-opacity="0" data-translatey="100">
                    <div class="col-md-10 col-md-offset-1">
                        <h1>Continue to</h1>
                        <h2>Checkout</h2>
                    </div>
                </div>
            </div>

        </div>

        <!-- Section -->
        <div class="container-fluid dark section no-padding">
            <div class="container">
                <div class="row">
                    <ul class="horz-menu center-menu">
                        <li><span><a href="@Url.Action("Login","Account")">Login</a></span></li>
                        <li><span><a href="@Url.Action("CheckOut","ShoppingCart")">Billing</a></span></li>
                        <li><span><a href="@Url.Action("OrderDetails","ShoppingCart")">Shipping</a></span></li>
                        <li ><span><a href="@Url.Action("OrderInfo","ShoppingCart")">Order info</a></span></li>
                        <li class="active"><span><a href="@Url.Action("PaymentInfo","ShoppingCart")">Payment info</a></span></li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Section -->
        <div class="container-fluid white section">
            <div class="container">
                <div class="row">                  
                    <div class="col-sm-8 col-sm-push-2">
                        <header class="centred">
                            <h1>Select</h1>
                            <h2>Payment Method</h2>
                        </header>
                        <hr class="space-40" />
                        @*@using (Html.BeginForm("PaymentInfo", "ShoppingCart", FormMethod.Post))
        {
            <div class="check-option">
                <input type="checkbox" checked> <strong>Direct bank transfer</strong>

            </div>
            <div class="check-option">
                <input id="paypal" type="checkbox"> <strong>PayPal</strong>
            </div>
            <div class="check-option">
                <input id="cheque" type="checkbox"> <strong>Cheque</strong>
            </div>
            <div class="check-option">
                <input id="creditcard" type="checkbox"> <strong>Credit or Debit card</strong>
            </div>
            <div class="row">
                <div class="col-sm-12 btn-wrap">
                    <a href="@Url.Action("OrderInfo","ShoppingCart")" class="btn btn-grey"><span>Previous</span></a> <a href="@Url.Action("PaymentWithPaypal","ShoppingCart")" class="btn btn-default" style="height:48px; width:150px;"><input type="submit" name="name" value="" />Place Order</a>
                </div>
            </div>
             <div id="paypal-button-container"></div>
        }*@

                        <div id="smart-button-container">
                            <div style="text-align: center;">
                                <div id="paypal-button-container"></div>
                            </div>
                        </div>
                        
                        <script src="https://www.paypal.com/sdk/js?client-id=sb&enable-funding=venmo&currency=USD" data-sdk-integration-source="button-factory"></script>
                        <script>
                            function initPayPalButton() {
                                paypal.Buttons({
                                    style: {
                                        shape: 'rect',
                                        color: 'gold',
                                        layout: 'vertical',
                                        label: 'paypal',

                                    },
                          
                                    createOrder: function (data, actions) {
                                        return actions.order.create({
                                            purchase_units: [{ "amount": { "currency_code": "USD", "value":2.80} }]
                                        });
                                    },
                                    onApprove: function (data, actions) {
                                        return actions.order.capture().then(function (orderData) {

                                            // Full available details
                                            console.log('Capture result', orderData, JSON.stringify(orderData, null, 2));

                                            // Show a success message within this page, e.g.
                                            const element = document.getElementById('paypal-button-container');
                                            element.innerHTML = '';
                                            element.innerHTML = '<h3>Thank you for your payment!</h3>';

                                            

                                        });
                                    },
                                    onError: function (err) {
                                        console.log(err);                                    }
                                }).render('#paypal-button-container');
                            }
                            initPayPalButton();
                        </script>
                    </div>
                </div>
            </div>
        </div>

        <!-- Footer -->
    </div>
    

        

</body>
</html>

